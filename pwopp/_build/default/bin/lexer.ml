# 1 "bin/lexer.mll"
 
open Parser

# 6 "bin/lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\233\255\015\000\000\000\236\255\237\255\238\255\031\000\
    \240\255\241\255\000\000\001\000\000\000\000\000\001\000\001\000\
    \249\255\012\000\013\000\014\000\002\000\254\255\252\255\250\255\
    \248\255\247\255\005\000\000\000\006\000\246\255\000\000\243\255\
    \001\000\000\000\011\000\245\255\244\255\003\000\012\000\242\255\
    \009\000\019\000\235\255";
  Lexing.lex_backtrk =
   "\255\255\255\255\021\000\255\255\255\255\255\255\255\255\016\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\004\000\002\000\255\255\000\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255";
  Lexing.lex_default =
   "\255\255\000\000\255\255\255\255\000\000\000\000\000\000\255\255\
    \000\000\000\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\000\000\000\000\000\000\
    \000\000\000\000\255\255\255\255\255\255\000\000\255\255\000\000\
    \255\255\255\255\255\255\000\000\000\000\255\255\255\255\000\000\
    \255\255\255\255\000\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\020\000\000\000\020\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \020\000\019\000\020\000\000\000\000\000\000\000\015\000\024\000\
    \005\000\004\000\009\000\008\000\000\000\007\000\000\000\006\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\000\000\000\000\017\000\016\000\018\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\023\000\022\000\021\000\000\000\000\000\003\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\032\000\000\000\000\000\000\000\010\000\012\000\036\000\
    \026\000\011\000\030\000\029\000\037\000\033\000\031\000\040\000\
    \035\000\039\000\027\000\034\000\013\000\028\000\038\000\041\000\
    \042\000\000\000\000\000\000\000\014\000\025\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    ";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\255\255\020\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\020\000\255\255\255\255\255\255\000\000\015\000\
    \000\000\000\000\000\000\000\000\255\255\000\000\255\255\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\255\255\255\255\000\000\000\000\000\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\017\000\018\000\019\000\255\255\255\255\000\000\007\000\
    \007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\
    \007\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\012\000\255\255\255\255\255\255\000\000\000\000\011\000\
    \013\000\000\000\026\000\028\000\010\000\032\000\030\000\003\000\
    \034\000\038\000\013\000\033\000\000\000\027\000\037\000\040\000\
    \041\000\255\255\255\255\255\255\000\000\014\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    ";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec token lexbuf =
   __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 11 "bin/lexer.mll"
          ( token lexbuf )
# 126 "bin/lexer.ml"

  | 1 ->
# 12 "bin/lexer.mll"
         ( NEQ )
# 131 "bin/lexer.ml"

  | 2 ->
# 13 "bin/lexer.mll"
        (GT)
# 136 "bin/lexer.ml"

  | 3 ->
# 14 "bin/lexer.mll"
         (EGT)
# 141 "bin/lexer.ml"

  | 4 ->
# 15 "bin/lexer.mll"
        (LT)
# 146 "bin/lexer.ml"

  | 5 ->
# 16 "bin/lexer.mll"
         (ELT)
# 151 "bin/lexer.ml"

  | 6 ->
# 17 "bin/lexer.mll"
        ( EQ )
# 156 "bin/lexer.ml"

  | 7 ->
# 18 "bin/lexer.mll"
         (AND)
# 161 "bin/lexer.ml"

  | 8 ->
# 19 "bin/lexer.mll"
         (OR)
# 166 "bin/lexer.ml"

  | 9 ->
# 20 "bin/lexer.mll"
           ( TRUE )
# 171 "bin/lexer.ml"

  | 10 ->
# 21 "bin/lexer.mll"
            ( FALSE )
# 176 "bin/lexer.ml"

  | 11 ->
# 22 "bin/lexer.mll"
         ( IF )
# 181 "bin/lexer.ml"

  | 12 ->
# 23 "bin/lexer.mll"
           ( THEN )
# 186 "bin/lexer.ml"

  | 13 ->
# 24 "bin/lexer.mll"
           ( ELSE )
# 191 "bin/lexer.ml"

  | 14 ->
# 25 "bin/lexer.mll"
        ( MULT )
# 196 "bin/lexer.ml"

  | 15 ->
# 26 "bin/lexer.mll"
        ( PLUS )
# 201 "bin/lexer.ml"

  | 16 ->
# 27 "bin/lexer.mll"
        ( MINUS )
# 206 "bin/lexer.ml"

  | 17 ->
# 28 "bin/lexer.mll"
        ( DIV )
# 211 "bin/lexer.ml"

  | 18 ->
# 29 "bin/lexer.mll"
        ( LPAREN )
# 216 "bin/lexer.ml"

  | 19 ->
# 30 "bin/lexer.mll"
        ( RPAREN )
# 221 "bin/lexer.ml"

  | 20 ->
# 31 "bin/lexer.mll"
           ( NONE )
# 226 "bin/lexer.ml"

  | 21 ->
# 32 "bin/lexer.mll"
           ( INT (int_of_string (Lexing.lexeme lexbuf)) )
# 231 "bin/lexer.ml"

  | 22 ->
# 33 "bin/lexer.mll"
        ( EOF )
# 236 "bin/lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

;;

