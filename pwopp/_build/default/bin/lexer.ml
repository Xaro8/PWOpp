# 1 "bin/lexer.mll"
 
open Parser

# 6 "bin/lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\229\255\017\000\000\000\233\255\234\255\235\255\236\255\
    \237\255\238\255\031\000\240\255\241\255\000\000\001\000\000\000\
    \000\000\002\000\001\000\249\255\003\000\014\000\015\000\002\000\
    \254\255\252\255\250\255\248\255\247\255\005\000\000\000\006\000\
    \246\255\000\000\243\255\001\000\000\000\011\000\245\255\244\255\
    \003\000\012\000\242\255\009\000\019\000\232\255\079\000\089\000\
    ";
  Lexing.lex_backtrk =
   "\255\255\255\255\025\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\016\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\004\000\002\000\255\255\000\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\024\000\
    ";
  Lexing.lex_default =
   "\255\255\000\000\255\255\255\255\000\000\000\000\000\000\000\000\
    \000\000\000\000\255\255\000\000\000\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\000\000\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\255\255\255\255\255\255\
    \000\000\255\255\000\000\255\255\255\255\255\255\000\000\000\000\
    \255\255\255\255\000\000\255\255\255\255\000\000\255\255\255\255\
    ";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\023\000\023\000\023\000\023\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \023\000\022\000\023\000\000\000\000\000\000\000\018\000\027\000\
    \008\000\007\000\012\000\011\000\000\000\010\000\000\000\009\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\000\000\004\000\020\000\019\000\021\000\046\000\
    \026\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\025\000\024\000\000\000\003\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\035\000\000\000\000\000\000\000\013\000\015\000\039\000\
    \029\000\014\000\033\000\032\000\040\000\036\000\034\000\043\000\
    \038\000\042\000\030\000\037\000\016\000\031\000\041\000\044\000\
    \045\000\000\000\000\000\006\000\017\000\005\000\028\000\047\000\
    \047\000\047\000\047\000\047\000\047\000\047\000\047\000\047\000\
    \047\000\047\000\047\000\047\000\047\000\047\000\047\000\047\000\
    \047\000\047\000\047\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\023\000\023\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\023\000\255\255\255\255\255\255\000\000\018\000\
    \000\000\000\000\000\000\000\000\255\255\000\000\255\255\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\255\255\000\000\000\000\000\000\000\000\002\000\
    \020\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\021\000\022\000\255\255\000\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\015\000\255\255\255\255\255\255\000\000\000\000\014\000\
    \016\000\000\000\029\000\031\000\013\000\035\000\033\000\003\000\
    \037\000\041\000\016\000\036\000\000\000\030\000\040\000\043\000\
    \044\000\255\255\255\255\000\000\000\000\000\000\017\000\046\000\
    \046\000\046\000\046\000\046\000\046\000\046\000\046\000\046\000\
    \046\000\047\000\047\000\047\000\047\000\047\000\047\000\047\000\
    \047\000\047\000\047\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec token lexbuf =
   __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 13 "bin/lexer.mll"
          ( token lexbuf )
# 143 "bin/lexer.ml"

  | 1 ->
# 14 "bin/lexer.mll"
         ( NEQ )
# 148 "bin/lexer.ml"

  | 2 ->
# 15 "bin/lexer.mll"
        (GT)
# 153 "bin/lexer.ml"

  | 3 ->
# 16 "bin/lexer.mll"
         (EGT)
# 158 "bin/lexer.ml"

  | 4 ->
# 17 "bin/lexer.mll"
        (LT)
# 163 "bin/lexer.ml"

  | 5 ->
# 18 "bin/lexer.mll"
         (ELT)
# 168 "bin/lexer.ml"

  | 6 ->
# 19 "bin/lexer.mll"
        ( EQ )
# 173 "bin/lexer.ml"

  | 7 ->
# 20 "bin/lexer.mll"
         (AND)
# 178 "bin/lexer.ml"

  | 8 ->
# 21 "bin/lexer.mll"
         (OR)
# 183 "bin/lexer.ml"

  | 9 ->
# 22 "bin/lexer.mll"
           ( TRUE )
# 188 "bin/lexer.ml"

  | 10 ->
# 23 "bin/lexer.mll"
            ( FALSE )
# 193 "bin/lexer.ml"

  | 11 ->
# 24 "bin/lexer.mll"
         ( IF )
# 198 "bin/lexer.ml"

  | 12 ->
# 25 "bin/lexer.mll"
           ( THEN )
# 203 "bin/lexer.ml"

  | 13 ->
# 26 "bin/lexer.mll"
           ( ELSE )
# 208 "bin/lexer.ml"

  | 14 ->
# 27 "bin/lexer.mll"
        ( MULT )
# 213 "bin/lexer.ml"

  | 15 ->
# 28 "bin/lexer.mll"
        ( PLUS )
# 218 "bin/lexer.ml"

  | 16 ->
# 29 "bin/lexer.mll"
        ( MINUS )
# 223 "bin/lexer.ml"

  | 17 ->
# 30 "bin/lexer.mll"
        ( DIV )
# 228 "bin/lexer.ml"

  | 18 ->
# 31 "bin/lexer.mll"
        ( LPAREN )
# 233 "bin/lexer.ml"

  | 19 ->
# 32 "bin/lexer.mll"
        ( RPAREN )
# 238 "bin/lexer.ml"

  | 20 ->
# 33 "bin/lexer.mll"
        ( SLPAREN )
# 243 "bin/lexer.ml"

  | 21 ->
# 34 "bin/lexer.mll"
        ( SRPAREN )
# 248 "bin/lexer.ml"

  | 22 ->
# 35 "bin/lexer.mll"
        ( ENDL )
# 253 "bin/lexer.ml"

  | 23 ->
# 36 "bin/lexer.mll"
           ( NONE )
# 258 "bin/lexer.ml"

  | 24 ->
# 37 "bin/lexer.mll"
          ( FLOAT (float_of_string (Lexing.lexeme lexbuf)))
# 263 "bin/lexer.ml"

  | 25 ->
# 38 "bin/lexer.mll"
           ( INT (int_of_string (Lexing.lexeme lexbuf)) )
# 268 "bin/lexer.ml"

  | 26 ->
# 39 "bin/lexer.mll"
        ( EOF )
# 273 "bin/lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

;;

